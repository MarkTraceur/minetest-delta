Minetest-c55 protocol (incomplete, early draft):
Updated 2011-06-18

A custom protocol over UDP.

Initialization:
- A dummy reliable packet with peer_id=PEER_ID_INEXISTENT=0 is sent to the server:
	- Actually this can be sent without the reliable packet header, too, i guess,
	  but the sequence number in the header allows the sender to re-send the
	  packet without accidentally getting a double initialization.
	- Packet content:
		# Basic header
		u32 protocol_id = PROTOCOL_ID = 0x4f457403
		u16 sender_peer_id = PEER_ID_INEXISTENT = 0
		u8 channel = 0
		# Reliable packet header
		u8 type = TYPE_RELIABLE = 3
		u16 seqnum = SEQNUM_INITIAL = 65500
		# Original packet header
		u8 type = TYPE_ORIGINAL = 1
		# And no actual payload.
- Server responds with something like this:
	- Packet content:
		# Basic header
		u32 protocol_id = PROTOCOL_ID = 0x4f457403
		u16 sender_peer_id = PEER_ID_INEXISTENT = 0
		u8 channel = 0
		# Reliable packet header
		u8 type = TYPE_RELIABLE = 3
		u16 seqnum = SEQNUM_INITIAL = 65500
		# Control packet header
		u8 type = TYPE_CONTROL = 0
		u8 controltype = CONTROLTYPE_SET_PEER_ID = 1
		u16 peer_id_new = assigned peer id to client (other than 0 or 1)
- Then the connection can be disconnected by sending:
	- Packet content:
		# Basic header
		u32 protocol_id = PROTOCOL_ID = 0x4f457403
		u16 sender_peer_id = whatever was gotten in CONTROLTYPE_SET_PEER_ID
		u8 channel = 0
		# Control packet header
		u8 type = TYPE_CONTROL = 0
		u8 controltype = CONTROLTYPE_DISCO = 2

